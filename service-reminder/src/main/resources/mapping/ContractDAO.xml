<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zx.servicereminder.mapper.ContractDAO">
  <resultMap id="BaseResultMap" type="com.zx.servicereminder.model.Contract">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="create_user" jdbcType="INTEGER" property="createUser" />
    <result column="number" jdbcType="VARCHAR" property="number" />
    <result column="create_date" jdbcType="DATE" property="createDate" />
    <result column="contract_type" jdbcType="INTEGER" property="contractType" />
    <result column="content_type" jdbcType="INTEGER" property="contentType" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="block" jdbcType="INTEGER" property="block" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="technician" jdbcType="VARCHAR" property="technician" />
    <result column="customer" jdbcType="VARCHAR" property="customer" />
    <result column="sign_date" jdbcType="DATE" property="signDate" />
    <result column="due" jdbcType="DATE" property="due" />
    <result column="amount" jdbcType="DOUBLE" property="amount" />
    <result column="rest_amount" jdbcType="DOUBLE" property="restAmount" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="service_start" jdbcType="DATE" property="serviceStart" />
    <result column="service_end" jdbcType="DATE" property="serviceEnd" />
    <result column="archive_tag" jdbcType="BIT" property="archiveTag" />
    <result column="operation_tag" jdbcType="BIT" property="operationTag" />
    <result column="account_id" jdbcType="INTEGER" property="accountId" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, create_user, number, create_date, contract_type, content_type, name, block, operator, 
    technician, customer, sign_date, due, amount, rest_amount, content, service_start, 
    service_end, archive_tag, operation_tag, account_id
  </sql>
  <select id="selectByExample" parameterType="com.zx.servicereminder.model.ContractExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="limit != null">
      <if test="offset != null">
        limit ${offset}, ${limit}
      </if>
      <if test="offset == null">
        limit ${limit}
      </if>
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from contract
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from contract
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.zx.servicereminder.model.ContractExample">
    delete from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.zx.servicereminder.model.Contract">
    insert into contract (id, create_user, number, 
      create_date, contract_type, content_type, 
      name, block, operator, 
      technician, customer, sign_date, 
      due, amount, rest_amount, 
      content, service_start, service_end, 
      archive_tag, operation_tag, account_id
      )
    values (#{id,jdbcType=INTEGER}, #{createUser,jdbcType=INTEGER}, #{number,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=DATE}, #{contractType,jdbcType=INTEGER}, #{contentType,jdbcType=INTEGER}, 
      #{name,jdbcType=VARCHAR}, #{block,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, 
      #{technician,jdbcType=VARCHAR}, #{customer,jdbcType=VARCHAR}, #{signDate,jdbcType=DATE}, 
      #{due,jdbcType=DATE}, #{amount,jdbcType=DOUBLE}, #{restAmount,jdbcType=DOUBLE}, 
      #{content,jdbcType=VARCHAR}, #{serviceStart,jdbcType=DATE}, #{serviceEnd,jdbcType=DATE}, 
      #{archiveTag,jdbcType=BIT}, #{operationTag,jdbcType=BIT}, #{accountId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.zx.servicereminder.model.Contract">
    insert into contract
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="number != null">
        number,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="contractType != null">
        contract_type,
      </if>
      <if test="contentType != null">
        content_type,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="block != null">
        block,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="technician != null">
        technician,
      </if>
      <if test="customer != null">
        customer,
      </if>
      <if test="signDate != null">
        sign_date,
      </if>
      <if test="due != null">
        due,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="restAmount != null">
        rest_amount,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="serviceStart != null">
        service_start,
      </if>
      <if test="serviceEnd != null">
        service_end,
      </if>
      <if test="archiveTag != null">
        archive_tag,
      </if>
      <if test="operationTag != null">
        operation_tag,
      </if>
      <if test="accountId != null">
        account_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        #{number,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=DATE},
      </if>
      <if test="contractType != null">
        #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        #{contentType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        #{block,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="technician != null">
        #{technician,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        #{customer,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        #{signDate,jdbcType=DATE},
      </if>
      <if test="due != null">
        #{due,jdbcType=DATE},
      </if>
      <if test="amount != null">
        #{amount,jdbcType=DOUBLE},
      </if>
      <if test="restAmount != null">
        #{restAmount,jdbcType=DOUBLE},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="serviceStart != null">
        #{serviceStart,jdbcType=DATE},
      </if>
      <if test="serviceEnd != null">
        #{serviceEnd,jdbcType=DATE},
      </if>
      <if test="archiveTag != null">
        #{archiveTag,jdbcType=BIT},
      </if>
      <if test="operationTag != null">
        #{operationTag,jdbcType=BIT},
      </if>
      <if test="accountId != null">
        #{accountId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.zx.servicereminder.model.ContractExample" resultType="java.lang.Long">
    select count(*) from contract
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update contract
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null">
        create_user = #{record.createUser,jdbcType=INTEGER},
      </if>
      <if test="record.number != null">
        number = #{record.number,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null">
        create_date = #{record.createDate,jdbcType=DATE},
      </if>
      <if test="record.contractType != null">
        contract_type = #{record.contractType,jdbcType=INTEGER},
      </if>
      <if test="record.contentType != null">
        content_type = #{record.contentType,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.block != null">
        block = #{record.block,jdbcType=INTEGER},
      </if>
      <if test="record.operator != null">
        operator = #{record.operator,jdbcType=VARCHAR},
      </if>
      <if test="record.technician != null">
        technician = #{record.technician,jdbcType=VARCHAR},
      </if>
      <if test="record.customer != null">
        customer = #{record.customer,jdbcType=VARCHAR},
      </if>
      <if test="record.signDate != null">
        sign_date = #{record.signDate,jdbcType=DATE},
      </if>
      <if test="record.due != null">
        due = #{record.due,jdbcType=DATE},
      </if>
      <if test="record.amount != null">
        amount = #{record.amount,jdbcType=DOUBLE},
      </if>
      <if test="record.restAmount != null">
        rest_amount = #{record.restAmount,jdbcType=DOUBLE},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.serviceStart != null">
        service_start = #{record.serviceStart,jdbcType=DATE},
      </if>
      <if test="record.serviceEnd != null">
        service_end = #{record.serviceEnd,jdbcType=DATE},
      </if>
      <if test="record.archiveTag != null">
        archive_tag = #{record.archiveTag,jdbcType=BIT},
      </if>
      <if test="record.operationTag != null">
        operation_tag = #{record.operationTag,jdbcType=BIT},
      </if>
      <if test="record.accountId != null">
        account_id = #{record.accountId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update contract
    set id = #{record.id,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=INTEGER},
      number = #{record.number,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=DATE},
      contract_type = #{record.contractType,jdbcType=INTEGER},
      content_type = #{record.contentType,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      block = #{record.block,jdbcType=INTEGER},
      operator = #{record.operator,jdbcType=VARCHAR},
      technician = #{record.technician,jdbcType=VARCHAR},
      customer = #{record.customer,jdbcType=VARCHAR},
      sign_date = #{record.signDate,jdbcType=DATE},
      due = #{record.due,jdbcType=DATE},
      amount = #{record.amount,jdbcType=DOUBLE},
      rest_amount = #{record.restAmount,jdbcType=DOUBLE},
      content = #{record.content,jdbcType=VARCHAR},
      service_start = #{record.serviceStart,jdbcType=DATE},
      service_end = #{record.serviceEnd,jdbcType=DATE},
      archive_tag = #{record.archiveTag,jdbcType=BIT},
      operation_tag = #{record.operationTag,jdbcType=BIT},
      account_id = #{record.accountId,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.zx.servicereminder.model.Contract">
    update contract
    <set>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=INTEGER},
      </if>
      <if test="number != null">
        number = #{number,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=DATE},
      </if>
      <if test="contractType != null">
        contract_type = #{contractType,jdbcType=INTEGER},
      </if>
      <if test="contentType != null">
        content_type = #{contentType,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="block != null">
        block = #{block,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="technician != null">
        technician = #{technician,jdbcType=VARCHAR},
      </if>
      <if test="customer != null">
        customer = #{customer,jdbcType=VARCHAR},
      </if>
      <if test="signDate != null">
        sign_date = #{signDate,jdbcType=DATE},
      </if>
      <if test="due != null">
        due = #{due,jdbcType=DATE},
      </if>
      <if test="amount != null">
        amount = #{amount,jdbcType=DOUBLE},
      </if>
      <if test="restAmount != null">
        rest_amount = #{restAmount,jdbcType=DOUBLE},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="serviceStart != null">
        service_start = #{serviceStart,jdbcType=DATE},
      </if>
      <if test="serviceEnd != null">
        service_end = #{serviceEnd,jdbcType=DATE},
      </if>
      <if test="archiveTag != null">
        archive_tag = #{archiveTag,jdbcType=BIT},
      </if>
      <if test="operationTag != null">
        operation_tag = #{operationTag,jdbcType=BIT},
      </if>
      <if test="accountId != null">
        account_id = #{accountId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.zx.servicereminder.model.Contract">
    update contract
    set create_user = #{createUser,jdbcType=INTEGER},
      number = #{number,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=DATE},
      contract_type = #{contractType,jdbcType=INTEGER},
      content_type = #{contentType,jdbcType=INTEGER},
      name = #{name,jdbcType=VARCHAR},
      block = #{block,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      technician = #{technician,jdbcType=VARCHAR},
      customer = #{customer,jdbcType=VARCHAR},
      sign_date = #{signDate,jdbcType=DATE},
      due = #{due,jdbcType=DATE},
      amount = #{amount,jdbcType=DOUBLE},
      rest_amount = #{restAmount,jdbcType=DOUBLE},
      content = #{content,jdbcType=VARCHAR},
      service_start = #{serviceStart,jdbcType=DATE},
      service_end = #{serviceEnd,jdbcType=DATE},
      archive_tag = #{archiveTag,jdbcType=BIT},
      operation_tag = #{operationTag,jdbcType=BIT},
      account_id = #{accountId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>